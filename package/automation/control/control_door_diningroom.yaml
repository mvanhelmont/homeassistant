###########################################################################################
#
# CONTROL DININGROOM LIGHTS BASED ON DINIGROOM SENSOR
#
###########################################################################################

- alias: "Door Sensor - Diningroom door open Diningroom light off"
  trigger:

    platform: state
    entity_id: binary_sensor.node_10

  condition:
    - condition: state
      entity_id: input_boolean.scene_daylight
      state: "off"

    - condition: state
      entity_id: input_boolean.scene_goodnight
      state: "off"

  action:
    - service: light.turn_on
      data_template:
        entity_id: light.dressoir_all
        brightness_pct: >-
          {% if (states.binary_sensor.node_10.state) == 'on' and ((states.sensor.season.state) == 'autumn' or (states.sensor.season.state) == 'winter') %} 100
          {% elif (states.binary_sensor.node_10.state) == 'on' and ((states.sensor.season.state) == 'spring' or (states.sensor.season.state) == 'summer') %} 20
          {% else %} 100
          {% endif %}

    - service: homeassistant.turn_on
      data_template:
        entity_id: light.newkaku_01401eb6_a
        brightness_pct: >-
          {% if (states.binary_sensor.node_10.state) == 'on' and (states.switch.kay_learning.state) == 'off' and
                ((states.sensor.season.state) == 'spring' or (states.sensor.season.state) == 'summer') %}
                  0

          {% elif (states.binary_sensor.node_10.state) == 'off' and (states.switch.kay_learning.state) == 'off' and
                  ((states.sensor.season.state) == 'spring' or (states.sensor.season.state) == 'summer') %}
                  50

          {% elif (states.binary_sensor.node_10.state) == 'on' and (states.switch.kay_learning.state) == 'on' %}
                  100

          {% elif (states.binary_sensor.node_10.state) == 'off' and (states.switch.kay_learning.state) == 'on' %}
                  100

          {% else %} 50
          {% endif %}
